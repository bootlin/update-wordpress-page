#!/usr/bin/env python3
#
# update-wordpress-page: updates a Wordpress page with the contents
# of the input file.
#
# xmlrpc implementation of original work by Michael Opdenacker of Bootlin
# <michael dot opdenacker bootlin com>
#
# Described on https://bootlin.com/blog/automated-wp-page-updates/
# Download: https://github.com/bootlin/update-wordpress-page
#
# Usage: update-wordpress-page url-base post-id content-file
#
# Example: update-wordpress-page myblog.com 245 page-contents
#
# For each url-base, the $HOME/.update-wordpress-page file
# should give the wordpress user and password
#
# Multiple wordpress sites are supported.
#
# Tested with Python 3.6.9/3.7.5, WordPress 5.3
#
# Client Requirements:
#  configparser==4.0.2
#  python-wordpress-xmlrpc==2.3
#
# Server requirements (Ubuntu 18.04):
#   apt-get install php7.2-xml
#
# Vince Hillier / Revenni (vince at revenni dot com) 20191212
# License: Public domain

import argparse, sys, os
import configparser

from wordpress_xmlrpc import Client, WordPressPage
from wordpress_xmlrpc.methods import posts

description = 'Updates a Wordpress page with the specified contents'
parser = argparse.ArgumentParser(description=description)
parser.add_argument('protocol', help='http|https', choices=['http', 'https'])
parser.add_argument('url_base', help='bootlin.com')
parser.add_argument('page_id',  type=int, help='wordpress post id: 1223')
parser.add_argument('page_content', help='filename of new page')
args = parser.parse_args()

protocol = args.protocol
url_base = args.url_base
page_id = args.page_id
page_contents = args.page_content
config_file = os.environ['HOME'] + '/.update-wordpress-page'
url = protocol + '://' + url_base + '/xmlrpc.php'

# pull in new contents from file
try:
    file = open(page_contents)
    new_contents = file.read()
    file.close()

except Exception as e:
    sys.exit(e)

# read configuration file
try:
    config = configparser.RawConfigParser()
    config.read(config_file)
    user = config.get(url_base, 'user')
    password = config.get(url_base, 'password')
except configparser.NoSectionError:
    print("Error: {} does not contain valid entries for {}".format(config_file,url_base))
    sys.exit(1)

# pull down current page and modify it's contents
try:
    # classClient(url, username, password[, blog_id, transport])
    client = Client(url, user, password)
    page = client.call(posts.GetPost(page_id))
    page.content = new_contents
    if client.call(posts.EditPost(page_id, page)):
        print("page {} updated: {}".format(page.id, page.link))

except Exception as e:
    sys.exit(e)
